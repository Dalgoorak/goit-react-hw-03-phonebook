{"ast":null,"code":"var _jsxFileName = \"/Users/macos/Desktop/goit-react-hw-03-phonebook/src/components/App.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContactForm from './ContactForm/ContactForm';\nimport { ContactList } from './ContactList/ContactList';\nimport { Filter } from './Filter/Filter';\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconsole.log(typeof 42.1);\nexport default class App extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      contacts: [{\n        id: 'id-1',\n        name: 'Rosie Simpson',\n        number: '459-12-56'\n      }, {\n        id: 'id-2',\n        name: 'Hermione Kline',\n        number: '443-89-12'\n      }, {\n        id: 'id-3',\n        name: 'Eden Clements',\n        number: '645-17-79'\n      }, {\n        id: 'id-4',\n        name: 'Annie Copeland',\n        number: '227-91-26'\n      }],\n      filter: ''\n    };\n\n    this.changeFilter = event => {\n      this.setState({\n        filter: event.currentTarget.value\n      });\n    };\n\n    this.visibleContacts = () => {\n      const {\n        contacts,\n        filter\n      } = this.state;\n      const normalizedFilter = filter.toLowerCase();\n      return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n    };\n\n    this.addContatcts = _ref => {\n      let {\n        name,\n        number\n      } = _ref;\n      const contact = {\n        id: nanoid(),\n        name,\n        number\n      };\n\n      if (this.state.contacts.some(contact => contact.name === name)) {\n        alert(`${name} is already in contacts`);\n      } else {\n        this.setState(prevState => ({\n          contacts: [contact, ...prevState.contacts]\n        }));\n      }\n    };\n\n    this.deleteContacts = contactId => {\n      this.setState(prevState => ({\n        contacts: prevState.contacts.filter(contact => contact.id !== contactId)\n      }));\n    };\n  }\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parseContacts = JSON.parse(contacts);\n\n    if (parseContacts) {\n      this.setState({\n        contacts: parseContacts\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const {\n      filter\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Phonebook\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n        onSubmit: this.addContatcts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Filter, {\n        value: filter,\n        onChange: this.changeFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactList, {\n        contacts: this.visibleContacts(),\n        onDeleteContact: this.deleteContacts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/macos/Desktop/goit-react-hw-03-phonebook/src/components/App.jsx"],"names":["React","PropTypes","ContactForm","ContactList","Filter","nanoid","console","log","App","Component","state","contacts","id","name","number","filter","changeFilter","event","setState","currentTarget","value","visibleContacts","normalizedFilter","toLowerCase","contact","includes","addContatcts","some","alert","prevState","deleteContacts","contactId","componentDidMount","localStorage","getItem","parseContacts","JSON","parse","componentDidUpdate","prevProps","setItem","stringify","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport ContactForm from './ContactForm/ContactForm';\nimport { ContactList } from './ContactList/ContactList';\nimport { Filter } from './Filter/Filter';\n\nimport { nanoid } from 'nanoid';\nconsole.log(typeof 42.1);\n\nexport default class App extends React.Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parseContacts = JSON.parse(contacts);\n\n    if (parseContacts) {\n      this.setState({ contacts: parseContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  changeFilter = event => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  visibleContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  addContatcts = ({ name, number }) => {\n    const contact = {\n      id: nanoid(),\n      name,\n      number,\n    };\n\n    if (this.state.contacts.some(contact => contact.name === name)) {\n      alert(`${name} is already in contacts`);\n    } else {\n      this.setState(prevState => ({\n        contacts: [contact, ...prevState.contacts],\n      }));\n    }\n  };\n\n  deleteContacts = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  render() {\n    const { filter } = this.state;\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addContatcts} />\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList\n          contacts={this.visibleContacts()}\n          onDeleteContact={this.deleteContacts}\n        />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}